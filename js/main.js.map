{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/scripts/_appius.equalise.js","src/scripts/_appius.footerToggle.js","src/scripts/_appius.formRegexValidation.js","src/scripts/_appius.primaryNav.js","src/scripts/_appius.scroller.js","src/scripts/_sunlife.accordions.js","src/scripts/_sunlife.alphabetCarousel.js","src/scripts/_sunlife.help.js","src/scripts/_sunlife.nav.js","src/scripts/_sunlife.showHide.js","src/scripts/styleguide.js","src/scripts/vendor/bootstrap.js","src/scripts/vendor/bootstrap/carousel.js","src/scripts/vendor/bootstrap/tab.js"],"names":[],"mappingsxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzfile":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var appius = appius || {};\r\nvar modulePlugin = {}\r\n\r\n// Check to see if plugins array has already been defined.\r\nif (typeof appius.plugins == \"undefined\") {\r\n    appius.plugins = [];\r\n}\r\n\r\n// Create object of the current plugin details\r\nmodulePlugin = {\r\n    version: '1.0.0',\r\n    authors: 'Phil Hazelton',\r\n    name: 'Equaliser',\r\n    filename: 'equalise.js',\r\n    description: 'Provides support for the equal-height helper attribute \"data-equal\". Use different values to creating unique \"groupings\" of elements. Layout is adjusted automatically on resize based on element offsets, not source order. Call init() to resize after markup changes (e.g. on accordions).'\r\n};\r\nappius.plugins.push(modulePlugin);\r\n\r\n\r\n\r\n/** querySelectorAll polyfill (IE6/7) */\r\nif (!document.querySelectorAll) {\r\n    document.querySelectorAll = function (selectors) {\r\n        var style = document.createElement('style'), elements = [], element;\r\n        document.documentElement.firstChild.appendChild(style);\r\n        document._qsa = [];\r\n\r\n        style.styleSheet.cssText = selectors + '{x-qsa:expression(document._qsa && document._qsa.push(this))}';\r\n        window.scrollBy(0, 0);\r\n        style.parentNode.removeChild(style);\r\n\r\n        while (document._qsa.length) {\r\n            element = document._qsa.shift();\r\n            element.style.removeAttribute('x-qsa');\r\n            elements.push(element);\r\n        }\r\n        document._qsa = null;\r\n        return elements;\r\n    };\r\n}\r\n\r\n/** Cross-browser document.ready handler */\r\n(function () {\r\n    'use strict';\r\n    var readyList = [],\r\n    readyFired = false,\r\n    readyEventHandlersInstalled = false;\r\n\r\n    function ready() {\r\n        if (readyFired) return null;\r\n\r\n        readyFired = true;\r\n        for (var i = 0; i < readyList.length; i++) readyList[i].call(window);\r\n        readyList = [];\r\n    }\r\n\r\n    window.docReady = function (callback) {\r\n        if (readyFired) return setTimeout(callback, 1), null;\r\n\r\n        readyList.push(callback);\r\n\r\n        if (document.readyState === 'complete' || (!document.attachEvent && document.readyState === 'interactive'))\r\n            return setTimeout(ready, 1), null;\r\n\r\n        if (!readyEventHandlersInstalled) {\r\n            if (document.addEventListener) {\r\n                document.addEventListener('DOMContentLoaded', ready, false);\r\n                window.addEventListener('load', ready, false);\r\n            } else {\r\n                document.attachEvent('onreadystatechange', function () {\r\n                    if (document.readyState == 'complete') ready();\r\n                });\r\n                window.attachEvent('onload', ready);\r\n            }\r\n            readyEventHandlersInstalled = true;\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n/**\r\n* @fileOverview Provides support for the equal-height helper attribute \"data-equal\"\r\n*   Use different values to creating unique \"groupings\" of elements. Layout is\r\n*   adjusted automatically on resize based on element offsets, not source order.\r\n*   Call init() to resize after markup changes (e.g. on accordions).\r\n* @author Phil Hazelton [phil@appius.com]\r\n* @version 1.0.0\r\n*/\r\nvar equalise = (function () {\r\n    var module = {};\r\n    var ATTR = 'data-equalise';\r\n\r\n    // Simplified debouncing function from John Hann\r\n    // http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/\r\n    var debounce = function (func) {\r\n        var timeout;\r\n\r\n        return function debounced() {\r\n            var obj = this, args = arguments;\r\n            function delayed() {\r\n                func.apply(obj, args);\r\n                timeout = null;\r\n            };\r\n\r\n            if (timeout)\r\n                clearTimeout(timeout);\r\n\r\n            timeout = setTimeout(delayed, 100);\r\n        };\r\n    };\r\n\r\n    window.onresize = debounce(init);\r\n\r\n    /** Run on start and resize, should also be triggeres on DOM changes. */\r\n    function init() {\r\n        var nodeList = document.querySelectorAll('[' + ATTR + ']');\r\n        var nodes = new Array();\r\n\r\n        for (var i = nodeList.length >>> 0; i--;) {\r\n            var node = nodeList[i];\r\n            var isVisible = (node.offsetWidth > 0 || node.offsetHeight > 0);\r\n\r\n            node.style.height = 'auto';\r\n            if (isVisible)\r\n                nodes.push(node);\r\n        }\r\n\r\n        processRow(nodes);\r\n    }\r\n\r\n    /** Finds and resizes the next row (recursive). */\r\n    function processRow(nodes) {\r\n        if (nodes.length < 1) return null;\r\n\r\n        var row = [];\r\n        var maxHeight = 0;\r\n        var nextNode = findNextNode(nodes);\r\n\r\n        var offset, node, group;\r\n\r\n        for (var i = nodes.length >>> 0; i--;) {\r\n            offset = getOffset(nodes[i]);\r\n            group = getGroup(nodes[i]);\r\n\r\n            if (offset == nextNode.offset && group == nextNode.group) {\r\n                node = nodes.splice(i, 1)[0];\r\n                row.push(node);\r\n                if (node.offsetHeight > maxHeight)\r\n                    maxHeight = node.offsetHeight;\r\n            }\r\n        }\r\n\r\n        if (row.length > 1)\r\n            for (var i = row.length >>> 0; i--;)\r\n                row[i].style.height = maxHeight + 'px';\r\n\r\n        if (nodes.length > 0)\r\n            processRow(nodes);\r\n    }\r\n\r\n    /** Searches an array of nodes for the uppermost element offset. */\r\n    function findNextNode(nodes) {\r\n        if (nodes.length < 1) return null;\r\n        var offset = getOffset(nodes[0]);\r\n        var group = getGroup(nodes[0]);\r\n        var thisOffset;\r\n\r\n        for (var i = nodes.length >>> 0; i--;) {\r\n            offset = getOffset(nodes[i]);\r\n            if (thisOffset < offset) {\r\n                offset = thisOffset;\r\n                group = getGroup(nodes[i]);\r\n            }\r\n        }\r\n\r\n        return {\r\n            offset: offset,\r\n            group: group\r\n        };\r\n    }\r\n\r\n    /** Get the upper offset of an individual node (for checking alignment) */\r\n    function getOffset(node) {\r\n        return node.getBoundingClientRect().top;\r\n    }\r\n\r\n    /** Get the group of a node */\r\n    function getGroup(node) {\r\n        return node.getAttribute(ATTR);\r\n    }\r\n\r\n    window.docReady(init);\r\n\r\n    module.init = init;\r\n    return module;\r\n}());\r\n\r\n// Reinitialise on window load, used to recalculate heights once images are loaded.\r\nwindow.onload = function () {\r\n    equalise.init();\r\n}","module.exports = {\r\n    init: function() {\r\n        $(\"footer .additional__button\").on('click', function (e) {\r\n            e.preventDefault();\r\n            var scrollPos;\r\n\r\n            $(this).toggleClass(\"additional__button--is-active\");\r\n\r\n            $(\"#additional\").toggle(2, function () {\r\n                scrollPos = $(\".additional__button\").offset().top - 10;\r\n                $('html, body').animate({ scrollTop: scrollPos }, 700);\r\n            });\r\n        });\r\n    }\r\n};\r\n","/**\r\n* @fileOverview Form field validation using data attributes\r\n* @author John Akerman [john.akerman@appius.com]\r\n* @version 0.1.0\r\n*/\r\n\r\n\"use strict\";\r\n\r\nvar FORMAT_VALIDATION_MSG_SELECTOR = 'data-formatvalidationmessage';\r\nvar VALIDATION_MSG_SELECTOR = 'data-validationmessage';\r\nvar REGEX_SELECTOR = 'data-validationregex';\r\nvar REQUIRED_SELECTOR = 'data-required';\r\nvar VALIDATABLE_SELECTOR = 'data-validatable';\r\n\r\nfunction validateAll () {\r\n    $('[' + VALIDATABLE_SELECTOR + ']').each(function() {\r\n        validateField($(this));\r\n    });\r\n}\r\n\r\nfunction validateDirty() {\r\n    var hiddenFields = $(\"#hfValidation\").val().split(\",\");\r\n    $.each(hiddenFields,function(index,elem) {\r\n        validateField($(\"#\" + elem));\r\n    });\r\n}\r\n\r\nfunction validateField($elem) {\r\n    validateField($elem);\r\n}\r\n\r\nfunction init() {\r\n    $('[' + VALIDATABLE_SELECTOR + ']').each(function() {\r\n        var $this = $(this);\r\n        $this.on(\"blur\", function() {\r\n            validateField($(this));\r\n        });\r\n    });\r\n}\r\n\r\n// A list of elements that have been focused is stored in a hidden input field\r\nfunction addElementValidationList($elem) {\r\n    var id = $elem.attr(\"id\");\r\n    var currentList = $(\"#hfValidation\").val();\r\n\r\n    if (currentList.indexOf(id) === -1) {\r\n        if (currentList.length !== 0) {\r\n            currentList += \",\";\r\n        }\r\n        currentList += $elem.attr(\"id\");\r\n        $(\"#hfValidation\").val(currentList);\r\n    }\r\n}\r\n\r\nfunction removeElementValidationList($elem) {\r\n    var id = $elem.attr(\"id\");\r\n    var currentList = $(\"#hfValidation\").val();\r\n\r\n    if (currentList === \",\") {\r\n        currentList = \"\";\r\n    } else {\r\n        currentList = currentList.replace(id, \"\");\r\n    }\r\n\r\n    currentList = currentList.replace(/\\,$/, '');\r\n    $(\"#hfValidation\").val(currentList);\r\n}\r\n\r\nfunction showError($elem, msg) {\r\n    var $elemParent = $elem.parents(\".form-group\");\r\n    addElementValidationList($elem);\r\n\r\n    if ($elem.hasClass(\"has-error\")) return; // If field already has an error set, don't show another.\r\n\r\n    $elemParent.addClass(\"has-error\");\r\n    $elem.addClass(\"has-error\");\r\n\r\n    // Create popup bubble with error message\r\n    $(\"<div class='bubble bubble--bottom bubble--ketchup'>\"+ msg  + \"</div>\").insertBefore($elemParent);\r\n}\r\n\r\nfunction hideError($elem) {\r\n    var $elemParent = $elem.parents(\".form-group\");\r\n\r\n    $elem.removeClass(\"has-error\");\r\n    $elemParent.removeClass(\"has-error\");\r\n    $elemParent.prev(\".bubble\").remove();\r\n\r\n    removeElementValidationList($elem);\r\n}\r\n\r\nfunction validateField($elem) {\r\n    var val = $elem.val();\r\n    var reg = $elem.attr(REGEX_SELECTOR);\r\n\r\n    // Check for select, if so only validate if its required and set to first item in index.\r\n    if ($elem.is(\"select\") && $elem.attr(REQUIRED_SELECTOR) === 'True') {\r\n        if ($elem[0].selectedIndex === 0) {\r\n            showError($elem, $elem.attr(VALIDATION_MSG_SELECTOR));\r\n        }\r\n        return;\r\n    }\r\n\r\n    if ($elem.attr(REQUIRED_SELECTOR) === 'True' && val.length === 0) {\r\n        showError($elem, $elem.attr(VALIDATION_MSG_SELECTOR));\r\n        return;\r\n    }\r\n\r\n    if (typeof $elem.attr(REGEX_SELECTOR) !== \"undefined\") {\r\n        var regFilter = new RegExp(reg, \"i\");\r\n        if (regFilter.test(val) === false) {\r\n            showError($elem, (FORMAT_VALIDATION_MSG_SELECTOR));\r\n            return;\r\n        }\r\n    }\r\n\r\n    // If no errors found, hide message\r\n    hideError($elem);\r\n}\r\n\r\nmodule.exports = {\r\n    validateAll : validateAll,\r\n    validateDirty: validateDirty,\r\n    validateField : validateField,\r\n    init: init\r\n};\r\n","module.exports = {\r\n    init: function() {\r\n        $(document).click(function (event) {\r\n            if (!$(event.target).closest(\".primary-nav__items\").length) {\r\n                if ($('.primary-nav__items.panel-open').length > 0) {\r\n                    $('.primary-nav__items .is-open').removeClass('is-open');\r\n                    $('primary-nav__items.panel-open').removeClass('panel-open');\r\n    \t\t\t\tpanelCheckOpenStatus();\r\n                }\r\n            }\r\n        });\r\n\r\n        $('.primary-nav li.dropdown .primary-nav__top-level').on('click', function () {\r\n            var $this = $(this);\r\n    \t\tvar $panel = $this.next('.primary-nav__panel');\r\n\r\n            // Panel is currently open, so close\r\n            if ($this.parent().hasClass('is-open')) {\r\n                $('.primary-nav li.dropdown').removeClass('is-open');\r\n    \t\t\t$panel.attr('style', '');\r\n    \t\t\tpanelCheckOpenStatus();\r\n            } else { // Panel is currently closed, so open\r\n    \t\t\tif (isMobile()) {\r\n    \t\t\t\tsetFlyoutHeight($panel);\r\n                    $('.primary-nav li.dropdown').removeClass('is-open');\r\n                    window.setTimeout(function() {\r\n        \t\t\t\t$this.parent().addClass('is-open');\r\n        \t\t\t\tpanelCheckOpenStatus();\r\n        \t\t\t}, 0);\r\n    \t\t\t} else {\r\n                    resetFlyoutHeight($panel);\r\n                    $('.primary-nav li.dropdown').removeClass('is-open');\r\n                    $this.parent().addClass('is-open');\r\n                    panelCheckOpenStatus();\r\n                }\r\n            }\r\n\r\n        }).children().click(function (e) {\r\n            e.stopPropagation();\r\n        });\r\n\r\n    \tfunction isMobile() {\r\n    \t\treturn ($(window).outerWidth() < 768);\r\n    \t}\r\n\r\n        function setFlyoutHeight($panel) {\r\n            $panel.attr('style', 'height: auto !important; transition: none !important');\r\n    \t\t$panel.attr('style', 'height: ' + $panel.outerHeight() + 'px');\r\n        }\r\n\r\n        function resetFlyoutHeight($panel) {\r\n            $panel.attr('style', '');\r\n        }\r\n\r\n    \tfunction panelCheckOpenStatus() {\r\n    \t\tif ($('.primary-nav li.dropdown.is-open').length > 0) {\r\n                $('.primary-nav__items').addClass('panel-open');\r\n            } else {\r\n                $('.primary-nav__items').removeClass('panel-open');\r\n            }\r\n    \t}\r\n    }\r\n};\r\n","\"use strict\";\r\nvar speed = 400;\r\n\r\nfunction checkErrors() {\r\n    if ($(\".has-error\").length !== 0) {\r\n        var $firstError = $(\".has-error\").eq(0);\r\n        var $bubbleError = $firstError.prev(\".bubble\");\r\n        var firstErrorOffset = $bubbleError.offset().top;\r\n        scrollToPosition(firstErrorOffset, null, -10);\r\n    }\r\n}\r\n\r\nfunction scrollToPosition(pos, hash, offset) {\r\n    if (typeof offset === \"undefined\") { offset = 0; }\r\n\r\n    $('html, body').animate({\r\n        scrollTop: (pos + offset)\r\n    }, {\r\n        speed: speed\r\n    }).promise().done(function () {\r\n        if (typeof hash !== undefined && hash !== null) {\r\n            window.location.hash = hash;\r\n        }\r\n    });\r\n}\r\n\r\nfunction init() {\r\n    var $scroll\t\t= $('html, body'),\r\n        $body\t\t= $scroll.filter('body');\r\n\r\n    $body.on('click.internal', '[href*=\"#\"]', function (event) {\r\n        var $a\t\t= $(event.target).closest('a'),\r\n            href\t= $a.attr('href'),\r\n            hash,\r\n            $target;\r\n\r\n        if (href.length) {\r\n            hash = href.substring(href.indexOf('#'));\r\n            $target = $(hash);\r\n        }\r\n        if ($target.length) {\r\n            event.preventDefault();\r\n            // $body.find('[data-toggle=\"navigation\"]').trigger('click.navigation.show-hide');\r\n            scrollToPosition($target.offset().top, hash);\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    checkErrors: checkErrors,\r\n    scrollToPosition: scrollToPosition,\r\n    init: init\r\n};\r\n","module.exports = {\r\n    init: function() {\r\n        $('.accordion-tabs-minimal').each(function () {\r\n            $(this).children('li').first().children('a').addClass('is-active').next().addClass('is-open').show();\r\n        });\r\n\r\n        $('.accordion-tabs-minimal').on('click', 'li > a.tab-link', function (event) {\r\n            if (!$(this).hasClass('is-active')) {\r\n                event.preventDefault();\r\n                var accordionTabs = $(this).closest('.accordion-tabs-minimal');\r\n                accordionTabs.find('.is-open').removeClass('is-open').hide();\r\n\r\n                $(this).next().toggleClass('is-open').toggle();\r\n                accordionTabs.find('.is-active').removeClass('is-active');\r\n                $(this).addClass('is-active');\r\n            } else {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n\r\n        $('.js-accordion-trigger').on('click', function (event) {\r\n            $(this).parent().find('.submenu').slideToggle('fast');  // apply the toggle to the ul\r\n            $(this).parent().toggleClass('is-expanded');\r\n            event.preventDefault();\r\n        });\r\n    }\r\n};\r\n","module.exports = {\r\n    init: function() {\r\n    \tvar $letters = $('[data-alphabet=\"sg-letters\"]'),\r\n    \t\t\t$large = $('[data-alphabet=\"large\"]'),\r\n    \t\t\tid = 'typography-letters',\r\n    \t\t\tactiveClass = 'active',\r\n    \t\t\tenabled\t= $.fn.carousel,\r\n    \t\t\tprev = [],\r\n    \t\t\tnext = [],\r\n    \t\t\toptions\t= {\r\n    \t\t\t\tinterval: 2500,\r\n    \t\t\t\tpause: 'hover',\r\n    \t\t\t\twrap: true,\r\n    \t\t\t\tkeyboard: true\r\n    \t\t\t};\r\n\r\n    \tif (enabled) {\r\n    \t\t$letters.html(function(index, text) {\r\n    \t\t\tvar letters\t= text.split(''),\r\n    \t\t\t\t\thtml = [],\r\n    \t\t\t\t\tcarousel = [],\r\n    \t\t\t\t\ti\t= 0,\r\n    \t\t\t\t\tc\t= 0;\r\n\r\n    \t\t\tfor (i = 0; i < letters.length; i++) {\r\n    \t\t\t\tvar letter\t= letters[i];\r\n    \t\t\t\thtml[i]\t\t= '<a href=\"#\" data-letter=\"' + letter + '\" data-target=\"#' + id + '\" data-slide-to=\"' + i + '\" class=\"sg-letter' + (i === 0 ? ' ' + activeClass : '') + '\">' + letter + '</a>';\r\n    \t\t\t\tcarousel[c]\t= '<div data-letter=\"' + letter + '\" class=\"item' + (i === 0 ? ' ' + activeClass : '') + '\">' + letter + '</div>';\r\n    \t\t\t\tc++;\r\n    \t\t\t}\r\n\r\n    \t\t\t// set the carousel HTML\r\n    \t\t\t$large.html(carousel.join(''));\r\n\r\n    \t\t\treturn html.join('');\r\n    \t\t});\r\n\r\n    \t\tprev.push('<a data-slide=\"prev\" role=\"button\" href=\"#' + id + '\" class=\"left carousel-control\">');\r\n    \t\t\tprev.push('<span aria-hidden=\"true\" class=\"icon-prev\"></span>');\r\n    \t\t\tprev.push('<span class=\"sr-only\">Previous</span>');\r\n    \t\tprev.push('</a>');\r\n\r\n    \t\tnext.push('<a data-slide=\"next\" role=\"button\" href=\"#' + id + '\" class=\"right carousel-control\">');\r\n    \t\t\tnext.push('<span aria-hidden=\"true\" class=\"icon-next\"></span>');\r\n    \t\t\tnext.push('<span class=\"sr-only\">Next</span>');\r\n    \t\tnext.push('</a>');\r\n\r\n    \t\t$large.wrapInner('<div class=\"carousel-inner\"></div>').append(prev.join('')).append(next.join(''));\r\n    \t\t$large.attr('id', id).addClass('carousel slide').carousel(options).on('slide.bs.carousel', function (event) {\r\n    \t\t\tvar $current\t= $(event.relatedTarget),\r\n    \t\t\t\tindex\t\t= $current.index();\r\n\r\n    \t\t\t$letters.find('a').removeClass(activeClass).eq(index).addClass(activeClass);\r\n    \t\t}).on('slid.bs.carousel', function () {});\r\n    \t}\r\n    }\r\n};\r\n","module.exports = {\r\n    init: function() {\r\n        var activeClass = 'active';\r\n\r\n        $('.sg-help').each(function (i, element) {\r\n            var\t$help\t\t= $(element),\r\n            $sections\t= $help.find('.sg-help__section'),\r\n            html\t\t= [],\r\n            h\t\t\t= 0;\r\n\r\n            $sections.each(function (s, section) {\r\n                var $section\t= $(section),\r\n                title\t\t= $section.find('.sg-help__section__title').text(),\r\n                tab\t\t\t= $section.data('tab'),\r\n                classes\t\t= ['btn', 'btn--link'];\r\n\r\n                html[h++] = '<a class=\"' + classes.join(' ') + '\" data-toggle=\"collapse\" data-target=\"' + tab + '\" href=\"#' + tab + '\">' + title + '</a>';\r\n            });\r\n\r\n            $help.prepend('<div class=\"sg-help__nav btn-group\" data-count=\"' + h + '\">' + html.join('') + '</div>');\r\n        }).on('click.help', '.btn', function (event) {\r\n            var $button\t= $(event.target).closest('.btn'),\r\n            $group\t= $button.closest('.sg-help__nav'),\r\n            $help\t= $button.closest('.sg-help'),\r\n            target\t= $button.data('target'),\r\n            $target\t= $help.find('[data-tab=\"' + target + '\"]');\r\n\r\n            $group.find('.btn').removeClass(activeClass);\r\n            $target.siblings().removeClass(activeClass);\r\n\r\n            if ($target.is('.' + activeClass)) {\r\n                $target.add($button).removeClass(activeClass);\r\n            } else {\r\n                $target.add($button).addClass(activeClass);\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n};\r\n","module.exports = {\r\n    init: function() {\r\n    \tvar $body\t\t= $('body'),\r\n    \t\tbefore\t\t= $body.data('navigation-trigger') || '.logo',\r\n    \t\tshownClass\t= $body.data('navigation-class') || 'sidebar--shown',\r\n    \t\t$before\t\t= $(before),\r\n    \t\thtml\t\t= [],\r\n    \t\th\t\t\t= 0;\r\n\r\n    \thtml[h++] = '<button data-toggle=\"navigation\">';\r\n    \t\thtml[h++] = '<span></span>';\r\n    \t\thtml[h++] = '<span></span>';\r\n    \t\thtml[h++] = '<span></span>';\r\n    \thtml[h++] = '</button>';\r\n\r\n    \t$(html.join('')).insertBefore($before);\r\n\r\n    \t$body.on('click.navigation.show-hide', '[data-toggle=\"navigation\"]', function (event) {\r\n    \t\tif ($body.is('.' + shownClass)) {\r\n    \t\t\t$body.removeClass(shownClass);\r\n    \t\t} else {\r\n    \t\t\t$body.addClass(shownClass);\r\n    \t\t}\r\n\r\n    \t\tevent.preventDefault();\r\n    \t}).on('click.navigation.sub', '.nav__item--has-sub > a', function (event) {\r\n    \t\tvar $li\t= $(event.target).closest('.nav__item--has-sub'),\r\n    \t\t\t$ul\t= $li.children('ul');\r\n\r\n    \t\tif ($ul.is(':visible')) {\r\n    \t\t\t$ul.stop().slideUp();\r\n    \t\t} else {\r\n    \t\t\t$ul.stop().slideDown();\r\n    \t\t}\r\n\r\n    \t\tevent.preventDefault();\r\n    \t});\r\n    }\r\n};\r\n","module.exports = {\r\n    init: function() {\r\n        var $container\t= $('[data-show-hide=\"container\"]'),\r\n        html\t\t= [],\r\n        h\t\t\t= 0;\r\n\r\n        html[h++] = '<div class=\"btn-group\" data-show-hide=\"show-hide\">';\r\n        html[h++] = '<a href=\"#\" class=\"btn btn--small btn--link\" data-show-hide=\"show\">Show All</a>';\r\n        html[h++] = '<a href=\"#\" class=\"btn btn--small btn--link\" data-show-hide=\"hide\">Hide All</a>';\r\n        html[h++] = '</div>';\r\n\r\n        $container.on('click', '[data-show-hide=\"toggle\"]', function (event) {\r\n            var $toggle\t= $(event.target).closest('[data-show-hide=\"toggle\"]'),\r\n            $show\t= $toggle.parent().find('[data-show-hide=\"value\"]');\r\n\r\n            if ($show.is('[data-default=\"true\"]')) {\r\n                $show.attr('data-default', 'false');\r\n            } else {\r\n                $show.attr('data-default', 'true');\r\n            }\r\n\r\n            event.preventDefault();\r\n        }).each(function (i, element) {\r\n            $(element).append(html.join(''));\r\n        }).on('click', '[data-show-hide=\"show\"], [data-show-hide=\"hide\"]', function (event) {\r\n            var $link\t= $(event.target).closest('[data-show-hide=\"show\"], [data-show-hide=\"hide\"]'),\r\n            $c\t\t= $link.closest('[data-show-hide=\"container\"]'),\r\n            $values\t= $c.find('[data-show-hide=\"value\"]'),\r\n            type\t= $link.data('show-hide');\r\n\r\n            if (type === 'show') {\r\n                $values.attr('data-default', 'true');\r\n            } else if (type === 'hide') {\r\n                $values.attr('data-default', 'false');\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n\r\n        $('.expander-trigger').on('click', function () {\r\n    \t\t$(this).toggleClass(\"expander-hidden\");\r\n    \t});\r\n    }\r\n};\r\n","window.appius = {\r\n\tscroller: require('./_appius.scroller.js'),\r\n\tprimaryNav: require('./_appius.primaryNav.js'),\r\n\taccordion: require('./_sunlife.accordions.js'),\r\n\tshowHide: require('./_sunlife.showHide.js'),\r\n\thelp: require('./_sunlife.help.js'),\r\n\talphabetCarousel: require('./_sunlife.alphabetCarousel.js'),\r\n\tfooterToggle: require('./_appius.footerToggle.js'),\r\n\tnav: require('./_sunlife.nav.js')\r\n};\r\n\r\n﻿require('./vendor/bootstrap.js');\r\nrequire('./_appius.equalise.js');\r\nrequire('./_appius.formRegexValidation.js');\r\n\r\n$(document).ready(function () {\r\n\tappius.scroller.init();\r\n\tappius.primaryNav.init();\r\n\tappius.accordion.init();\r\n\tappius.showHide.init();\r\n\tappius.help.init();\r\n\tappius.alphabetCarousel.init();\r\n\tappius.footerToggle.init();\r\n\tappius.nav.init();\r\n});\r\n","// require('./bootstrap/transition.js');\r\n// require('./bootstrap/alert.js');\r\n// require('./bootstrap/button.js');\r\nrequire('./bootstrap/carousel.js');\r\n// require('./bootstrap/collapse.js');\r\n// require('./bootstrap/dropdown.js');\r\n// require('./bootstrap/modal.js');\r\nrequire('./bootstrap/tab.js');\r\n// require('./bootstrap/affix.js');\r\n// require('./bootstrap/scrollspy.js');\r\n// require('./bootstrap/tooltip.js');\r\n// require('./bootstrap/popover.js');\r\n","/* ========================================================================\r\n * Bootstrap: carousel.js v3.3.7\r\n * http://getbootstrap.com/javascript/#carousel\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // CAROUSEL CLASS DEFINITION\r\n  // =========================\r\n\r\n  var Carousel = function (element, options) {\r\n    this.$element    = $(element)\r\n    this.$indicators = this.$element.find('.carousel-indicators')\r\n    this.options     = options\r\n    this.paused      = null\r\n    this.sliding     = null\r\n    this.interval    = null\r\n    this.$active     = null\r\n    this.$items      = null\r\n\r\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\r\n\r\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\r\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\r\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\r\n  }\r\n\r\n  Carousel.VERSION  = '3.3.7'\r\n\r\n  Carousel.TRANSITION_DURATION = 600\r\n\r\n  Carousel.DEFAULTS = {\r\n    interval: 5000,\r\n    pause: 'hover',\r\n    wrap: true,\r\n    keyboard: true\r\n  }\r\n\r\n  Carousel.prototype.keydown = function (e) {\r\n    if (/input|textarea/i.test(e.target.tagName)) return\r\n    switch (e.which) {\r\n      case 37: this.prev(); break\r\n      case 39: this.next(); break\r\n      default: return\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  Carousel.prototype.cycle = function (e) {\r\n    e || (this.paused = false)\r\n\r\n    this.interval && clearInterval(this.interval)\r\n\r\n    this.options.interval\r\n      && !this.paused\r\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\r\n\r\n    return this\r\n  }\r\n\r\n  Carousel.prototype.getItemIndex = function (item) {\r\n    this.$items = item.parent().children('.item')\r\n    return this.$items.index(item || this.$active)\r\n  }\r\n\r\n  Carousel.prototype.getItemForDirection = function (direction, active) {\r\n    var activeIndex = this.getItemIndex(active)\r\n    var willWrap = (direction == 'prev' && activeIndex === 0)\r\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\r\n    if (willWrap && !this.options.wrap) return active\r\n    var delta = direction == 'prev' ? -1 : 1\r\n    var itemIndex = (activeIndex + delta) % this.$items.length\r\n    return this.$items.eq(itemIndex)\r\n  }\r\n\r\n  Carousel.prototype.to = function (pos) {\r\n    var that        = this\r\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\r\n\r\n    if (pos > (this.$items.length - 1) || pos < 0) return\r\n\r\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\r\n    if (activeIndex == pos) return this.pause().cycle()\r\n\r\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\r\n  }\r\n\r\n  Carousel.prototype.pause = function (e) {\r\n    e || (this.paused = true)\r\n\r\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\r\n      this.$element.trigger($.support.transition.end)\r\n      this.cycle(true)\r\n    }\r\n\r\n    this.interval = clearInterval(this.interval)\r\n\r\n    return this\r\n  }\r\n\r\n  Carousel.prototype.next = function () {\r\n    if (this.sliding) return\r\n    return this.slide('next')\r\n  }\r\n\r\n  Carousel.prototype.prev = function () {\r\n    if (this.sliding) return\r\n    return this.slide('prev')\r\n  }\r\n\r\n  Carousel.prototype.slide = function (type, next) {\r\n    var $active   = this.$element.find('.item.active')\r\n    var $next     = next || this.getItemForDirection(type, $active)\r\n    var isCycling = this.interval\r\n    var direction = type == 'next' ? 'left' : 'right'\r\n    var that      = this\r\n\r\n    if ($next.hasClass('active')) return (this.sliding = false)\r\n\r\n    var relatedTarget = $next[0]\r\n    var slideEvent = $.Event('slide.bs.carousel', {\r\n      relatedTarget: relatedTarget,\r\n      direction: direction\r\n    })\r\n    this.$element.trigger(slideEvent)\r\n    if (slideEvent.isDefaultPrevented()) return\r\n\r\n    this.sliding = true\r\n\r\n    isCycling && this.pause()\r\n\r\n    if (this.$indicators.length) {\r\n      this.$indicators.find('.active').removeClass('active')\r\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\r\n      $nextIndicator && $nextIndicator.addClass('active')\r\n    }\r\n\r\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\r\n    if ($.support.transition && this.$element.hasClass('slide')) {\r\n      $next.addClass(type)\r\n      $next[0].offsetWidth // force reflow\r\n      $active.addClass(direction)\r\n      $next.addClass(direction)\r\n      $active\r\n        .one('bsTransitionEnd', function () {\r\n          $next.removeClass([type, direction].join(' ')).addClass('active')\r\n          $active.removeClass(['active', direction].join(' '))\r\n          that.sliding = false\r\n          setTimeout(function () {\r\n            that.$element.trigger(slidEvent)\r\n          }, 0)\r\n        })\r\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\r\n    } else {\r\n      $active.removeClass('active')\r\n      $next.addClass('active')\r\n      this.sliding = false\r\n      this.$element.trigger(slidEvent)\r\n    }\r\n\r\n    isCycling && this.cycle()\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  // CAROUSEL PLUGIN DEFINITION\r\n  // ==========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.carousel')\r\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n      var action  = typeof option == 'string' ? option : options.slide\r\n\r\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\r\n      if (typeof option == 'number') data.to(option)\r\n      else if (action) data[action]()\r\n      else if (options.interval) data.pause().cycle()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.carousel\r\n\r\n  $.fn.carousel             = Plugin\r\n  $.fn.carousel.Constructor = Carousel\r\n\r\n\r\n  // CAROUSEL NO CONFLICT\r\n  // ====================\r\n\r\n  $.fn.carousel.noConflict = function () {\r\n    $.fn.carousel = old\r\n    return this\r\n  }\r\n\r\n\r\n  // CAROUSEL DATA-API\r\n  // =================\r\n\r\n  var clickHandler = function (e) {\r\n    var href\r\n    var $this   = $(this)\r\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\r\n    if (!$target.hasClass('carousel')) return\r\n    var options = $.extend({}, $target.data(), $this.data())\r\n    var slideIndex = $this.attr('data-slide-to')\r\n    if (slideIndex) options.interval = false\r\n\r\n    Plugin.call($target, options)\r\n\r\n    if (slideIndex) {\r\n      $target.data('bs.carousel').to(slideIndex)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  $(document)\r\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\r\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\r\n\r\n  $(window).on('load', function () {\r\n    $('[data-ride=\"carousel\"]').each(function () {\r\n      var $carousel = $(this)\r\n      Plugin.call($carousel, $carousel.data())\r\n    })\r\n  })\r\n\r\n}(jQuery);\r\n","/* ========================================================================\r\n * Bootstrap: tab.js v3.3.7\r\n * http://getbootstrap.com/javascript/#tabs\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // TAB CLASS DEFINITION\r\n  // ====================\r\n\r\n  var Tab = function (element) {\r\n    // jscs:disable requireDollarBeforejQueryAssignment\r\n    this.element = $(element)\r\n    // jscs:enable requireDollarBeforejQueryAssignment\r\n  }\r\n\r\n  Tab.VERSION = '3.3.7'\r\n\r\n  Tab.TRANSITION_DURATION = 150\r\n\r\n  Tab.prototype.show = function () {\r\n    var $this    = this.element\r\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\r\n    var selector = $this.data('target')\r\n\r\n    if (!selector) {\r\n      selector = $this.attr('href')\r\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n    }\r\n\r\n    if ($this.parent('li').hasClass('active')) return\r\n\r\n    var $previous = $ul.find('.active:last a')\r\n    var hideEvent = $.Event('hide.bs.tab', {\r\n      relatedTarget: $this[0]\r\n    })\r\n    var showEvent = $.Event('show.bs.tab', {\r\n      relatedTarget: $previous[0]\r\n    })\r\n\r\n    $previous.trigger(hideEvent)\r\n    $this.trigger(showEvent)\r\n\r\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\r\n\r\n    var $target = $(selector)\r\n\r\n    this.activate($this.closest('li'), $ul)\r\n    this.activate($target, $target.parent(), function () {\r\n      $previous.trigger({\r\n        type: 'hidden.bs.tab',\r\n        relatedTarget: $this[0]\r\n      })\r\n      $this.trigger({\r\n        type: 'shown.bs.tab',\r\n        relatedTarget: $previous[0]\r\n      })\r\n    })\r\n  }\r\n\r\n  Tab.prototype.activate = function (element, container, callback) {\r\n    var $active    = container.find('> .active')\r\n    var transition = callback\r\n      && $.support.transition\r\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\r\n\r\n    function next() {\r\n      $active\r\n        .removeClass('active')\r\n        .find('> .dropdown-menu > .active')\r\n          .removeClass('active')\r\n        .end()\r\n        .find('[data-toggle=\"tab\"]')\r\n          .attr('aria-expanded', false)\r\n\r\n      element\r\n        .addClass('active')\r\n        .find('[data-toggle=\"tab\"]')\r\n          .attr('aria-expanded', true)\r\n\r\n      if (transition) {\r\n        element[0].offsetWidth // reflow for transition\r\n        element.addClass('in')\r\n      } else {\r\n        element.removeClass('fade')\r\n      }\r\n\r\n      if (element.parent('.dropdown-menu').length) {\r\n        element\r\n          .closest('li.dropdown')\r\n            .addClass('active')\r\n          .end()\r\n          .find('[data-toggle=\"tab\"]')\r\n            .attr('aria-expanded', true)\r\n      }\r\n\r\n      callback && callback()\r\n    }\r\n\r\n    $active.length && transition ?\r\n      $active\r\n        .one('bsTransitionEnd', next)\r\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\r\n      next()\r\n\r\n    $active.removeClass('in')\r\n  }\r\n\r\n\r\n  // TAB PLUGIN DEFINITION\r\n  // =====================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n      var data  = $this.data('bs.tab')\r\n\r\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.tab\r\n\r\n  $.fn.tab             = Plugin\r\n  $.fn.tab.Constructor = Tab\r\n\r\n\r\n  // TAB NO CONFLICT\r\n  // ===============\r\n\r\n  $.fn.tab.noConflict = function () {\r\n    $.fn.tab = old\r\n    return this\r\n  }\r\n\r\n\r\n  // TAB DATA-API\r\n  // ============\r\n\r\n  var clickHandler = function (e) {\r\n    e.preventDefault()\r\n    Plugin.call($(this), 'show')\r\n  }\r\n\r\n  $(document)\r\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\r\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\r\n\r\n}(jQuery);\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}